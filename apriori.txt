data = []
n = int(input(&quot;\nNo. of transactions: &quot;))
for i in range(n):
item = int(input(&quot;No. of items: &quot;))
print(&quot;Enter items: &quot;)
arr = []
arr = input().split(&quot; &quot;)
data.append([i, arr])
init = []
for i in data:
for q in i[1]:
if(q not in init):
init.append(q)
init = sorted(init)
print(init)
sp = float(input(&quot;\nMinimum support: &quot;))
s = int(sp*len(init))
from collections import Counter
c = Counter()
for i in init:
for d in data:
if(i in d[1]):
c[i]+=1
print(&quot;\nC1:&quot;)
for i in c:
print(str([i])+&quot;: &quot;+str(c[i]))
print()
l = Counter()
for i in c:
if(c[i] &gt;= s):
l[frozenset([i])]+=c[i]
print(&quot;L1:&quot;)
for i in l:
print(str(list(i))+&quot;: &quot;+str(l[i]))
print()
pl = l
pos = 1
for count in range (2,1000):
if(len(l) == 1):
break
nc = set()
temp = list(l)
for i in range(0,len(temp)):
for j in range(i+1,len(temp)):
t = temp[i].union(temp[j])
if(len(t) == count):
nc.add(temp[i].union(temp[j]))
nc = list(nc)
c = Counter()
for i in nc:
c[i] = 0
for q in data:
temp = set(q[1])
if(i.issubset(temp)):
c[i]+=1
print(&quot;C&quot;+str(count)+&quot;:&quot;
for i in c:
print(str(list(i))+&quot;: &quot;+str(c[i]))
print()
l = Counter()
for i in c:
if(c[i] &gt;= s):
l[i]+=c[i]
print(&quot;L&quot;+str(count)+&quot;:&quot;
for i in l:
print(str(list(i))+&quot;: &quot;+str(l[i]))
print()
pl = l
pos = count
print(&quot;Result: &quot;)
print(&quot;L&quot;+str(pos)+&quot;:&quot;)
for i in pl:
print(str(list(i))+&quot;: &quot;+str(pl[i]))
print()